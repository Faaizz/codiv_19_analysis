# BUILD-USING docker build -f ./Docker/fetch_service/Dockerfile_arm7l -t covid_fetch_service
# RUN-USING: docker run -d --rm -v volume-name:/app/data covid_fetch_service

# DEVELOPMENT
# FROM python:3.8.5-buster

FROM python:3.8.5-slim-buster

# Install OS dependencies
RUN apt-get update
RUN apt-get install -y cron git\
    gcc gfortran python-dev libopenblas-dev liblapack-dev cython \
    unzip wget
RUN apt-get install -y libopenblas-base libatlas3-base

# Compile numpy
WORKDIR /app
RUN wget https://github.com/numpy/numpy/archive/master.zip
RUN unzip master.zip
RUN rm master.zip
WORKDIR /app/numpy-master
RUN pip3 install cython
RUN python3 setup.py build
RUN python3 setup.py install --user

# Compile scipy
WORKDIR /app
RUN wget https://github.com/scipy/scipy/archive/master.zip
RUN unzip master.zip
RUN rm master.zip
WORKDIR /app/scipy-master
RUN apt-get install -y g++
RUN python3 setup.py build
RUN python3 setup.py install --user

# Revert workdir to root
WORKDIR /

# Install Python dependencies
RUN pip3 install --upgrade pip
COPY ./Docker/fetch_service/requirements_arm7l.txt /app/requirements.txt
RUN pip3 install --no-cache-dir -r /app/requirements.txt

# Copy app files
COPY ./src/data/get_data.py /app/
COPY ./src/data/process_JH_data.py /app/
COPY ./src/features/build_features.py /app/

COPY ./Docker/fetch_service/update_pipeline.sh /app/
RUN chmod 755 /app/update_pipeline.sh

COPY ./Docker/fetch_service/update_cron /app/

# Data fetching and processing
RUN mkdir /app/data
RUN ["/bin/bash", "/app/update_pipeline.sh"]

# Launch command
ENTRYPOINT [ "/bin/bash", "-c", "cat /app/update_cron >> /etc/crontab && cron -f -L 1"]